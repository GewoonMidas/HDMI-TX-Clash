/* AUTOMATICALLY GENERATED VERILOG-2001 SOURCE CODE.
** GENERATED BY CLASH 1.6.3. DO NOT MODIFY.
*/
`timescale 100fs/100fs
module Hdmi_I2C_BitMaster_bitMaster_bitStateMachine
    ( // Inputs
      input  c$arg
    , input  c$arg_0
    , input  c$arg_1
    , input [2:0] c$arg_2
    , input  c$arg_3
    , input [9:0] c$arg_4

      // Outputs
    , output wire [9:0] c$case_alt
    );
  wire [9:0] c$case_alt_0;
  reg [9:0] result;
  reg [9:0] c$case_alt_1;
  reg [9:0] c$case_alt_2;
  reg [9:0] c$case_alt_3;
  reg [9:0] c$case_alt_4;
  wire  c$app_arg;
  reg [5:0] c$app_arg_0;
  wire [9:0] result_0;
  wire [5:0] result_selection_1;
  wire [1:0] c$case_alt_selection_4;
  wire [1:0] c$case_alt_selection_8;
  wire [1:0] c$case_alt_selection_12;
  wire [2:0] c$case_alt_selection_16;

  assign c$case_alt = (c$arg | c$arg_0) ? {1'b1,
                                           1'b1,   1'b0,   1'b0,
                                           {3'b000,3'bxxx}} : c$case_alt_0;

  assign c$case_alt_0 = c$arg_1 ? result : {c$arg_4[9:9],
                                            c$arg_4[8:8],   c$arg_4[7:7],   1'b0,
                                            c$arg_4[5:0]};

  assign result_selection_1 = c$arg_4[5:0];

  always @(*) begin
    case(result_selection_1[5:3])
      3'b000 : result = result_0;
      3'b001 : result = c$case_alt_4;
      3'b010 : result = c$case_alt_3;
      3'b011 : result = c$case_alt_2;
      default : result = c$case_alt_1;
    endcase
  end

  assign c$case_alt_selection_4 = c$arg_4[2:1];

  always @(*) begin
    case(c$case_alt_selection_4)
      2'd0 : c$case_alt_1 = {1'b0,   c$app_arg,
                             1'b0,   1'b0,   {3'b100,2'd1,1'bx}};
      2'd1 : c$case_alt_1 = {1'b1,   c$app_arg,
                             1'b0,   1'b0,   {3'b100,2'd2,1'bx}};
      2'd2 : c$case_alt_1 = {1'b1,   c$app_arg,
                             1'b1,   1'b0,   {3'b100,2'd3,1'bx}};
      2'd3 : c$case_alt_1 = {1'b0,   c$app_arg,
                             1'b0,   1'b1,   {3'b000,3'bxxx}};
      default : c$case_alt_1 = result_0;
    endcase
  end

  assign c$case_alt_selection_8 = c$arg_4[2:1];

  always @(*) begin
    case(c$case_alt_selection_8)
      2'd0 : c$case_alt_2 = {1'b0,   1'b1,   1'b0,
                             1'b0,   {3'b011,2'd1,1'bx}};
      2'd1 : c$case_alt_2 = {1'b1,   1'b1,   1'b0,
                             1'b0,   {3'b011,2'd2,1'bx}};
      2'd2 : c$case_alt_2 = {1'b1,   1'b1,   1'b0,
                             1'b0,   {3'b011,2'd3,1'bx}};
      2'd3 : c$case_alt_2 = {1'b0,   1'b1,   1'b0,
                             1'b1,   {3'b000,3'bxxx}};
      default : c$case_alt_2 = result_0;
    endcase
  end

  assign c$case_alt_selection_12 = c$arg_4[2:1];

  always @(*) begin
    case(c$case_alt_selection_12)
      2'd0 : c$case_alt_3 = {1'b0,   1'b0,   1'b0,
                             1'b0,   {3'b010,2'd1,1'bx}};
      2'd1 : c$case_alt_3 = {1'b1,   1'b0,   1'b0,
                             1'b0,   {3'b010,2'd2,1'bx}};
      2'd2 : c$case_alt_3 = {1'b1,   1'b0,   1'b0,
                             1'b0,   {3'b010,2'd3,1'bx}};
      2'd3 : c$case_alt_3 = {1'b1,   1'b1,   1'b0,
                             1'b1,   {3'b000,3'bxxx}};
      default : c$case_alt_3 = result_0;
    endcase
  end

  assign c$case_alt_selection_16 = c$arg_4[2:0];

  always @(*) begin
    case(c$case_alt_selection_16)
      3'd0 : c$case_alt_4 = {c$arg_4[9:9],   1'b1,
                             1'b0,   1'b0,   {3'b001,3'd1}};
      3'd1 : c$case_alt_4 = {1'b1,   1'b1,   1'b0,
                             1'b0,   {3'b001,3'd2}};
      3'd2 : c$case_alt_4 = {1'b1,   1'b0,   1'b0,
                             1'b0,   {3'b001,3'd3}};
      3'd3 : c$case_alt_4 = {1'b1,   1'b0,   1'b0,
                             1'b0,   {3'b001,3'd4}};
      3'd4 : c$case_alt_4 = {1'b0,   1'b0,   1'b0,
                             1'b1,   {3'b000,3'bxxx}};
      default : c$case_alt_4 = result_0;
    endcase
  end

  assign c$app_arg = c$arg_3 == (1'b1);

  always @(*) begin
    case(c$arg_2)
      3'b000 : c$app_arg_0 = {3'b001,3'd0};
      3'b001 : c$app_arg_0 = {3'b010,2'd0,1'bx};
      3'b010 : c$app_arg_0 = {3'b100,2'd0,1'bx};
      3'b011 : c$app_arg_0 = {3'b011,2'd0,1'bx};
      default : c$app_arg_0 = {3'b000,3'bxxx};
    endcase
  end

  assign result_0 = {c$arg_4[9:9],
                     c$arg_4[8:8],   1'b0,   1'b0,   c$app_arg_0};


endmodule

